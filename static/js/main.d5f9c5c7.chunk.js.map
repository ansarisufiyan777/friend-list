{"version":3,"sources":["Constants.js","redux/GlobalActions.js","component/AddFriend.js","component/FriendItem.js","component/Header.js","component/Pagination.js","component/Search.js","component/Sorting.js","Utils.js","component/Alert.js","screens/Home.js","App.js","reportWebVitals.js","redux/Initial.js","redux/GlobalReducer.js","redux/Store.js","index.js"],"names":["ADD_FRIEND","SEARCH_FRIEND","TOGGLE_FAVOURITE","TOGGLE_DELETE","CHANGE_PAGE","SORT_ON_NAME","SORT_FAV","SHOW_ALERT","toggleDelete","value","dispatch","type","payload","paginate","connect","data","globalData","props","React","useState","name","setName","onChange","e","target","onKeyPress","event","key","trim","length","map","d","toLowerCase","includes","alert","className","placeholder","item","isFav","isDelete","onClick","icon","faStar","farStar","window","confirm","faTrash","user","page","pageSize","pageCount","Math","ceil","pageList","i","push","max","faAngleLeft","min","faAngleRight","search","searchText","isVisible","setVisible","handleKeyPress","faTimes","faSearch","nameSort","favSort","style","visibility","faSortAlphaDown","faSortAlphaUp","faSortDown","faSortUp","boolMap","true","false","applyFilter","applySort","filter","slice","sort","a","b","showAlert","mounted","useRef","useEffect","current","setTimeout","index","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isDeleted","setToggle","root","findIndex","store","createStore","combineReducers","action","Actions","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5f9c5c7.chunk.js","sourcesContent":["// Screens\r\nexport const HOME = \"Home\"\r\n// Action Creators\r\nexport const ADD_FRIEND = \"ADD_FRIEND\"\r\nexport const SEARCH_FRIEND = \"SEARCH_FRIEND\"\r\nexport const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\"\r\nexport const TOGGLE_DELETE = \"TOGGLE_DELETE\"\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\"\r\nexport const SORT_ON_NAME = \"SORT_ON_NAME\"\r\nexport const SORT_FAV = \"SORT_FAV\"\r\nexport const SHOW_ALERT = \"SHOW_ALERT\"","import { ADD_FRIEND, CHANGE_PAGE, SEARCH_FRIEND, SHOW_ALERT, SORT_FAV, SORT_ON_NAME, TOGGLE_DELETE, TOGGLE_FAVOURITE } from \"../Constants\";\r\n\r\nexport const addFriend = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_FRIEND,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const searchFriend = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SEARCH_FRIEND,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const toggleToFavourite = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TOGGLE_FAVOURITE,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const toggleDelete = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TOGGLE_DELETE,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const paginate = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PAGE,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const applySortOnName = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SORT_ON_NAME,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const applySortOnFav = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SORT_FAV,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\nexport const showAlert = (value) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: value,\r\n    });\r\n  };\r\n};","import '../App.scss';\r\nimport React from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { addFriend } from '../redux/GlobalActions';\r\n\r\nfunction AddFriend(props) {\r\n    const [name, setName] = React.useState('')\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter' && name.trim().length) {\r\n            if (props.data.map(d => d.name.toLowerCase()).includes(name.toLowerCase())){\r\n                alert(\"User with same name already exists.\")\r\n            }else{\r\n                props.dispatch(addFriend(name))\r\n                setName('')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <input value={name} \r\n        onChange={e => setName(e.target.value)} \r\n        onKeyPress={handleKeyPress}\r\n        className=\"input-text\" placeholder=\"Enter your friend's name\" type=\"text\" />\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (data) => ({\r\n    data: data.globalData.data\r\n\r\n})\r\nexport default connect(mapStateToProps)(AddFriend)\r\n","import '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons'\r\nimport { toggleDelete, toggleToFavourite } from '../redux/GlobalActions';\r\nfunction FriendItem(props) {\r\n    const onDelete = () => {\r\n        if (props.item.isDelete){\r\n            props.dispatch(toggleDelete(props.item))\r\n        }\r\n        else if(window.confirm(\"Do u really want to delete your friend?\")){\r\n            props.dispatch(toggleDelete(props.item))\r\n        }\r\n    }\r\n    return (\r\n        <div className={`item ${props.item.isFav ? 'blue': 'orange'} `}>\r\n            <div className={`data ${props.item.isDelete && 'deleted'}` }>\r\n                <div className=\"title\">{props.item.name}</div>\r\n                <div className=\"subTitle\">is your friend</div>\r\n            </div>\r\n            <div className=\"action-button\">\r\n                <FontAwesomeIcon onClick={() => props.dispatch(toggleToFavourite(props.item))}  icon={props.item.isFav ? faStar : farStar} />\r\n                <FontAwesomeIcon onClick={() => onDelete()} icon={faTrash} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (data) => ({\r\n    data: data.globalData.data\r\n})\r\nexport default connect(mapStateToProps)(FriendItem)\r\n","import '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport AddFriend from './AddFriend';\r\nimport FriendItem from './FriendItem';\r\nfunction Header() {\r\n    return (\r\n            <div className=\"nav\">\r\n\r\n                <h4>Friends List</h4>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (data) => ({\r\n    user: data.globalData.user\r\n})\r\nexport default connect(mapStateToProps)(Header)\r\n","import '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { paginate } from '../redux/GlobalActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Pagination(props) {\r\n    const pageCount = Math.ceil(props.data.length / props.pageSize)\r\n    let pageList = []\r\n    for (let i = 0; i < pageCount; i++) {\r\n        pageList.push(i)\r\n    }\r\n    return (\r\n        <div className=\"pagination\">\r\n            <div className=\"slider\">\r\n                <FontAwesomeIcon onClick={() => props.dispatch(paginate(Math.max(0, props.page - 1)))} className=\"number\" icon={faAngleLeft} />\r\n                {pageList.map((d, i) => <div key={i}\r\n                    onClick={() => props.dispatch(paginate(i))}\r\n                    className={`number ${i === props.page && 'selected'}`}>\r\n                    {i + 1}\r\n                </div>)}\r\n                <FontAwesomeIcon onClick={() => props.dispatch(paginate(Math.min(pageCount-1, props.page + 1)))} className=\"number\" icon={faAngleRight} />\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (data) => ({\r\n    data: data.globalData.data,\r\n    page: data.globalData.page,\r\n    pageSize: data.globalData.pageSize\r\n})\r\nexport default connect(mapStateToProps)(Pagination)\r\n","import React from 'react';\r\nimport '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport AddFriend from './AddFriend';\r\nimport FriendItem from './FriendItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCross, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { addFriend, searchFriend } from '../redux/GlobalActions';\r\nfunction Search(props) {\r\n    const [name, setName] = React.useState(props.search)\r\n    const [isVisible, setVisible] = React.useState(false)\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter' && name != props.search) {\r\n            props.dispatch(searchFriend(name))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search\">\r\n\r\n            {isVisible ? <div className=\"input-container\">\r\n                <input value={name}\r\n                onKeyPress={(e) => handleKeyPress(e)}\r\n                onChange={e => setName(e.target.value)}\r\n                className=\"input-text\" placeholder=\"Search friends\" type=\"text\" />\r\n                <FontAwesomeIcon onClick={() => setVisible(!isVisible)} icon={faTimes}></FontAwesomeIcon>\r\n            </div>\r\n                :\r\n                <div className=\"button\" onClick={() => setVisible(!isVisible)}>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (data) => ({\r\n    data: data.globalData.data,\r\n    search: data.globalData.searchText\r\n})\r\nexport default connect(mapStateToProps)(Search)\r\n","import '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport AddFriend from './AddFriend';\r\nimport FriendItem from './FriendItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortAlphaDown, faSortAlphaUp, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { applySortOnFav, applySortOnName } from '../redux/GlobalActions';\r\nfunction Sorting(props) {\r\n    return (\r\n            <div className=\"sorting\">\r\n                <FontAwesomeIcon style={{visibility:\"hidden\"}} onClick={() => props.dispatch(applySortOnName())} \r\n                icon={props.nameSort ? faSortAlphaDown: faSortAlphaUp}/>\r\n                <FontAwesomeIcon onClick={() => props.dispatch(applySortOnFav())} \r\n\r\n                icon={props.favSort ? faSortDown: faSortUp}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (data) => ({\r\n    nameSort: data.globalData.nameSort,\r\n    favSort: data.globalData.favSort\r\n\r\n})\r\nexport default connect(mapStateToProps)(Sorting)\r\n","const boolMap = {\n  true: 1,\n  false: 0\n}\nexport const applyFilter = (data, search, page, pageSize,  nameSort, favSort) => {\n  data = applySort(data, nameSort, favSort)\n  if (search && search.trim()) {\n      data = data.filter(d => d.name.toLowerCase().includes(search.toLowerCase()))\n  }\n  data = data.slice(page * pageSize, (page * pageSize) + pageSize)\n  return data\n}\n\nexport const applySort = (data, nameSort, favSort) => {\n  if (favSort){\n      return data.sort((a,b) => boolMap[b.isFav] - boolMap[a.isFav])\n  }else{\n      return data.sort((a,b) => boolMap[a.isFav] - boolMap[b.isFav])\n  }\n}\n","import React from 'react';\r\nimport '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport AddFriend from './AddFriend';\r\nimport FriendItem from './FriendItem';\r\nimport { showAlert } from '../redux/GlobalActions';\r\nfunction Alert(props) {\r\n    const mounted = React.useRef();\r\n    React.useEffect(() => {\r\n        if (!mounted.current) {\r\n            mounted.current = true;\r\n        } else {\r\n        }\r\n        setTimeout(() => {\r\n            props.dispatch(showAlert(false))\r\n        },2000)\r\n    });\r\n\r\n    return (\r\n        <div className=\"alert\">\r\n            <h4>Friend added successfully</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (data) => ({\r\n    showAlert: data.globalData.showAlert\r\n})\r\nexport default connect(mapStateToProps)(Alert)\r\n","import '../App.scss';\r\nimport { connect, Provider } from 'react-redux';\r\nimport Header from '../component/Header';\r\nimport AddFriend from '../component/AddFriend';\r\nimport FriendItem from '../component/FriendItem';\r\nimport Pagination from '../component/Pagination';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport Search from '../component/Search';\r\nimport Sorting from '../component/Sorting';\r\nimport { applyFilter } from '../Utils';\r\nimport Alert from '../component/Alert';\r\nfunction Home(props) {\r\n    const { data, search, page, pageSize, nameSort, favSort } = props\r\n    return (\r\n        <div className=\"container\">\r\n            <Header></Header>\r\n            <AddFriend></AddFriend>\r\n            <div className=\"line\"></div>\r\n            <Sorting></Sorting>\r\n            <div className=\"items\">\r\n                {applyFilter(data, search, page, pageSize, nameSort, favSort).map((item, index) =>\r\n                    <FriendItem key={index} item={item} index={index}></FriendItem>\r\n                )}\r\n            </div>\r\n            <Search></Search>\r\n            <Pagination></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (data) => ({\r\n    data: data.globalData.data,\r\n    page: data.globalData.page,\r\n    search: data.globalData.searchText,\r\n    pageSize: data.globalData.pageSize,\r\n    favSort: data.globalData.favSort,\r\n    nameSort: data.globalData.nameSort,\r\n})\r\nexport default connect(mapStateToProps)(Home)\r\n","import './App.scss';\nimport React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport Home from './screens/Home';\nimport Alert from './component/Alert';\nfunction App(props) {\n  \n  return (\n    <React.Fragment>\n      <Home></Home>\n      {props.showAlert && <Alert></Alert>}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (data) => ({\n  showAlert: data.globalData.showAlert\n})\nexport default connect(mapStateToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    user: {},\r\n    page: 0,\r\n    pageSize: 4,\r\n    favSort: true,\r\n    nameSort: true,\r\n    data: [\r\n        {\r\n            name: \"John Doe\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"Sufiyan Ansari\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"Bill Gates\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"Elon Musk\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"Dennis Ritchi\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"Steve Jobs\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n        {\r\n            name: \"James\",\r\n            isDeleted: false,\r\n            isFav: false\r\n        },\r\n    ]\r\n};\r\nexport default initialState","import * as Actions from '../Constants';\r\nimport initialState from './Initial';\r\n\r\nconst setToggle = (root, item, key) => {\r\n    let data = [...root.data]\r\n    let i = data.findIndex(d => d.name.toLowerCase() == item.name.toLowerCase())\r\n    data[i][key] = !data[i][key]\r\n    return {\r\n        ...root,\r\n        data\r\n    };\r\n}\r\n\r\nexport const globalDataReducer = function (root = initialState, action) {\r\n    switch (action.type) {\r\n        case Actions.ADD_FRIEND:\r\n            return {\r\n                ...root,\r\n                data: [...root.data, \r\n                    {\r\n                        name:action.payload\r\n                    }\r\n                ],\r\n                showAlert: true\r\n            };\r\n        case Actions.SEARCH_FRIEND:\r\n            return {\r\n                ...root,\r\n                searchText: action.payload\r\n            };\r\n        case Actions.SORT_ON_NAME:\r\n            return {\r\n                ...root,\r\n                nameSort: !root.nameSort\r\n            };\r\n        case Actions.SORT_FAV:\r\n            return {\r\n                ...root,\r\n                favSort: !root.favSort\r\n            };\r\n        case Actions.TOGGLE_FAVOURITE:\r\n            return setToggle(root, action.payload,'isFav')\r\n            case Actions.TOGGLE_DELETE:\r\n            return setToggle(root, action.payload,'isDelete')\r\n        case Actions.CHANGE_PAGE:\r\n            return {\r\n                ...root,\r\n                page:action.payload\r\n            };\r\n        case Actions.SHOW_ALERT:\r\n            return {\r\n                ...root,\r\n                showAlert:action.payload\r\n            };\r\n        default:\r\n            return root\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { globalDataReducer } from './GlobalReducer';\r\n\r\nvar store = createStore(\r\n    combineReducers({ globalData: globalDataReducer }),\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}